successes <- sum(patients[1:num_patients])
#Compute beliefs
alpha_posterior <- successes + alpha_prior
beta_posterior <- num_patients - successes  + beta_prior
c_theta = 1-pbeta(rr_decision, alpha_posterior, beta_posterior)
#Update outerloop variables for bias computation
alpha_posterior_bc <- alpha_posterior
beta_posterior_bc <- beta_posterior
if (c_theta > pcutoff){
concluded_hyp <- 1
break
}
}
#Update outerloop variables
if(concluded_hyp == 0) {
# h0 is true, we conclude h0
tn <- tn + 1
}else{
#h0 is true, we conclude h1
fp <- fp + 1
}
#Update biassum
mean_post <- alpha_posterior_bc / (alpha_posterior_bc +     beta_posterior_bc)
biassum <- biassum + (responserate_i - mean_post)
#Update psum
psum <- psum + num_patients
}
#Type II error rate / Power
for(i in 1:nsim){
#Sample from population
#Response rate ligt nu tussen de rr_decision value en 1 in
responserate <- responserate_ii
patients <- rbinom(sum(cohorts), 1, responserate)
#Initialization of true and concluded hypotheses
true_hyp <- 1
concluded_hyp <- 0
alpha_posterior_bc <- 0
beta_posterior_bc <- 0
#Run trial
for (j in 1:length(cohorts)) {
#Find number of patients and successes after j nrounds
num_patients <- sum(cohorts[1:j])
successes <- sum(patients[1:num_patients])
#Compute beliefs
alpha_posterior <- successes + alpha_prior
beta_posterior <- num_patients - successes  + beta_prior
c_theta = 1-pbeta(rr_decision, alpha_posterior, beta_posterior)
alpha_posterior_bc <- alpha_posterior
beta_posterior_bc <- beta_posterior
if (c_theta > pcutoff){
concluded_hyp <- 1
break
}
}
#Update outerloop variables
if(concluded_hyp == 0){
# h0 is false, we conclude h0
fn <- fn + 1
}else{
# h0 is false, we conclude h1
tp <- tp + 1
}
#Update biassum
mean_post <- alpha_posterior_bc / (alpha_posterior_bc +     beta_posterior_bc)
biassum + (responserate_ii - mean_post)
#Update psum
psum <- psum + num_patients
}
#Return the summary of the simulated trial
values <- c(cohorts[1], sum(cohorts), rr_decision, pcutoff, fp/(fp+tn), fn/(fn+tp), 1-fn/(fn+tp), biassum / (2*nsim), psum / (2*nsim), responserate_i, responserate_ii)
output <- matrix(values,
nrow = 1,
ncol = 11)
colnames(output) <- c('nmin', 'nmax', 'rr_decision', 'pcutoff', 'Type I Error rate', 'Type II Error rate', 'Power', 'Bias', 'avg(n)', 'Response rate I', 'Response rate II')
return(output)
}
set.seed(0)
#Fixed sample size gave n = 155, but we pick n = 156 in showing multiplicity problem
#Not that 155 is based on using table 6.4.1 where as direct calculation of effect size gives 153
OneTrial(cohorts = c(156), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
#Same size in cohorts, all else unchanged (ptrue = 0.50)
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(39,39,39,39), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(31,31,31,31,31), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = rep(1, 156), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
print('--- break ---', quote = F)
#Same size in cohorts, but we start from a fixed sample calc with small effect size (ptrue = 0.45)
OneTrial(cohorts = c(605), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(303,303), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(202,202,202), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(122,122,122,122,122), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = rep(1, 603), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
print('--- break ---', quote = F)
#Same size in cohorts, but we start from a fixed sample calc with big effect size (ptrue = 0.55)
OneTrial(cohorts = c(69), responserate_i = 0.4, responserate_ii = 0.55, rr_decision = 0.4)
OneTrial(cohorts = c(35,35), responserate_i = 0.4, responserate_ii = 0.55, rr_decision = 0.4)
OneTrial(cohorts = c(23,23,23), responserate_i = 0.4, responserate_ii = 0.55, rr_decision = 0.4)
set.seed(0)
#Combat multiplicity
#More stringent cutoff value
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.9642)
#Increase n in combination with cutoff value
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.985)
#Only increasing n doesnt bring us much
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.95)
print('--- linebreak ---', quote = F)
#why bother with bayesian design then, we only see worse FOCs
#particularly useful when effect is bigger than anticipated
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.475, rr_decision = 0.4, pcutoff = 0.97)
OneTrial(cohorts = rep(16,10), responserate_i = 0.4, responserate_ii = 0.6, rr_decision = 0.4, pcutoff = 0.99)
cohortsize <- 16
patients <- rbinom(2*cohortsize, 1, 0.55)
#Distribution params
a1 <- sum(patients[1:cohortsize])+1
b1 <- cohortsize-sum(patients[1:cohortsize])+1
a2 <- sum(patients[1:(2*cohortsize)])+1
b2 <- (2*cohortsize)-sum(patients[1:(2*cohortsize)])+1
par(mfrow = c(1,2))
#x-axis
x <- seq(0, 1, length.out=1000)
#After first group
prior <- dbeta(x, 1, 1)
posterior <- dbeta(x, a1, b1)
plot(x, prior, type = "l", main = bquote("Cohort 1"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
fillcol <- rgb(0.976, 0.184, 0.223, 0.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(1,1)", "Posterior Beta(8,10)"),
col = c("blue", "red"),
pch = c(15,15))
#After second group
prior <- dbeta(x, a1, b1)
posterior <- dbeta(x, a2, b2)
plot(x, prior, type = "l", main = bquote("Cohort 2"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(8,10)", "Posterior Beta(17,17)"),
col = c("blue", "red"),
pch = c(15,15))
paste0('hello', a1)
paste0('hello ', a1)
paste0('hello ', a1, ',' a2, ')')
paste0('hello ', a1, a2)
paste0('hello ', a1,',' ,a2)
paste0('hello (', a1,',' ,a2, ')')
paste0('hello (', a1,',' ,a2, ')', qoute = F)
cohortsize <- 16
patients <- rbinom(2*cohortsize, 1, 0.55)
#Distribution params
a1 <- sum(patients[1:cohortsize])+1
b1 <- cohortsize-sum(patients[1:cohortsize])+1
a2 <- sum(patients[1:(2*cohortsize)])+1
b2 <- (2*cohortsize)-sum(patients[1:(2*cohortsize)])+1
par(mfrow = c(1,2))
#x-axis
x <- seq(0, 1, length.out=1000)
#After first group
prior <- dbeta(x, 1, 1)
posterior <- dbeta(x, a1, b1)
plot(x, prior, type = "l", main = bquote("Cohort 1"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
fillcol <- rgb(0.976, 0.184, 0.223, 0.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(1,1)", "Posterior Beta(8,10)"),
col = c("blue", "red"),
pch = c(15,15))
#After second group
prior <- dbeta(x, a1, b1)
posterior <- dbeta(x, a2, b2)
plot(x, prior, type = "l", main = bquote("Cohort 2"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c(paste0('hello (', a1,',' ,a2, ')'), "Posterior Beta(17,17)"),
col = c("blue", "red"),
pch = c(15,15))
cohortsize <- 16
patients <- rbinom(2*cohortsize, 1, 0.55)
#Distribution params
a1 <- sum(patients[1:cohortsize])+1
b1 <- cohortsize-sum(patients[1:cohortsize])+1
a2 <- sum(patients[1:(2*cohortsize)])+1
b2 <- (2*cohortsize)-sum(patients[1:(2*cohortsize)])+1
par(mfrow = c(1,2))
#x-axis
x <- seq(0, 1, length.out=1000)
#After first group
prior <- dbeta(x, 1, 1)
posterior <- dbeta(x, a1, b1)
plot(x, prior, type = "l", main = bquote("Cohort 1"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
fillcol <- rgb(0.976, 0.184, 0.223, 0.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(1,1)", "Posterior Beta(8,10)"),
col = c("blue", "red"),
pch = c(15,15))
#After second group
prior <- dbeta(x, a1, b1)
posterior <- dbeta(x, a2, b2)
plot(x, prior, type = "l", main = bquote("Cohort 2"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c(paste0('Prior Beta(', a1,',' ,a2, ')'), paste0('Posterior Beta(', a1,',' ,a2, ')')),
col = c("blue", "red"),
pch = c(15,15))
cohortsize <- 16
patients <- rbinom(2*cohortsize, 1, 0.55)
#Distribution params
a1 <- sum(patients[1:cohortsize])+1
b1 <- cohortsize-sum(patients[1:cohortsize])+1
a2 <- sum(patients[1:(2*cohortsize)])+1
b2 <- (2*cohortsize)-sum(patients[1:(2*cohortsize)])+1
par(mfrow = c(1,2))
#x-axis
x <- seq(0, 1, length.out=1000)
#After first group
prior <- dbeta(x, 1, 1)
posterior <- dbeta(x, a1, b1)
plot(x, prior, type = "l", main = bquote("Cohort 1"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
fillcol <- rgb(0.976, 0.184, 0.223, 0.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(1,1)", paste0('Posterior Beta(', a1,',' ,a2, ')')),
col = c("blue", "red"),
pch = c(15,15))
#After second group
prior <- dbeta(x, a1, b1)
posterior <- dbeta(x, a2, b2)
plot(x, prior, type = "l", main = bquote("Cohort 2"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c(paste0('Prior Beta(', a1,',' ,a2, ')'), paste0('Posterior Beta(', a1,',' ,a2, ')')),
col = c("blue", "red"),
pch = c(15,15))
cohortsize <- 16
patients <- rbinom(2*cohortsize, 1, 0.55)
#Distribution params
a1 <- sum(patients[1:cohortsize])+1
b1 <- cohortsize-sum(patients[1:cohortsize])+1
a2 <- sum(patients[1:(2*cohortsize)])+1
b2 <- (2*cohortsize)-sum(patients[1:(2*cohortsize)])+1
print(paste0(a1," ",b1," ",a2," ",b2," "))
par(mfrow = c(1,2))
#x-axis
x <- seq(0, 1, length.out=1000)
#After first group
prior <- dbeta(x, 1, 1)
posterior <- dbeta(x, a1, b1)
plot(x, prior, type = "l", main = bquote("Cohort 1"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
fillcol <- rgb(0.976, 0.184, 0.223, 0.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(1,1)", paste0('Posterior Beta(', a1,',' ,b1, ')')),
col = c("blue", "red"),
pch = c(15,15))
#After second group
prior <- dbeta(x, a1, b1)
posterior <- dbeta(x, a2, b2)
plot(x, prior, type = "l", main = bquote("Cohort 2"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c(paste0('Prior Beta(', a1,',' ,b1, ')'), paste0('Posterior Beta(', a2,',' ,b2, ')')),
col = c("blue", "red"),
pch = c(15,15))
OneTrial(cohorts = c(5,5,5,5),
responserate_i = 0.4,
responserate_ii = 0.6,
rr_decision = 0.4,
pcutoff = 0.95)
OneTrial(cohorts = c(5,5,5),
responserate_i = 0.4,
responserate_ii = 0.6,
rr_decision = 0.4,
pcutoff = 0.95)
OneTrial(cohorts = c(5,5,5),
responserate_i = 0.4,
responserate_ii = 0.6,
rr_decision = 0.4,
pcutoff = 0.95)
set.seed(0)
#D16
#More stringent cutoff value
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.9642)
#D17
#Increase n in combination with cutoff value
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.985)
#D18
#Only increasing n doesnt bring us much
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.95)
print('--- linebreak ---', quote = F)
#why bother with bayesian design then, we only see worse FOCs
#particularly useful when effect is bigger than anticipated
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.475, rr_decision = 0.4, pcutoff = 0.97)
set.seed(0)
#D16
#More stringent cutoff value
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.9642)
#D17
#Increase n in combination with cutoff value
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.985)
#D18
#Only increasing n doesnt bring us much
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.95)
print('--- linebreak ---', quote = F)
#why bother with bayesian design then, we only see worse FOCs
#particularly useful when effect is bigger than anticipated
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.475, rr_decision = 0.4, pcutoff = 0.98)
#We pick a cohortsize and generate a population of 2*cohortsize with response rate = 0.55
cohortsize <- 16
patients <- rbinom(2*cohortsize, 1, 0.55)
#We compute the parameters of the prior and posterior distributions
a1 <- sum(patients[1:cohortsize])+1
b1 <- cohortsize-sum(patients[1:cohortsize])+1
a2 <- sum(patients[1:(2*cohortsize)])+1
b2 <- (2*cohortsize)-sum(patients[1:(2*cohortsize)])+1
par(mfrow = c(1,2))
#x-axis
x <- seq(0, 1, length.out=1000)
#After first group
prior <- dbeta(x, 1, 1)
posterior <- dbeta(x, a1, b1)
plot(x, prior, type = "l", main = bquote("Cohort 1"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
fillcol <- rgb(0.976, 0.184, 0.223, 0.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c("Prior Beta(1,1)", paste0('Posterior Beta(', a1,',' ,b1, ')')),
col = c("blue", "red"),
pch = c(15,15))
#After second group
prior <- dbeta(x, a1, b1)
posterior <- dbeta(x, a2, b2)
plot(x, prior, type = "l", main = bquote("Cohort 2"), xlab = bquote(theta), ylab = bquote("P" (theta) ), ylim=c(0,7), col = "blue", lwd = 1.5)
lines(x, posterior, col = "red", lwd = 1.5)
polygon(c(x[x>=0.4], max(x), 0.4), c(posterior[x>=0.4], 0, 0), angle = 45, col= fillcol, border = fillcol)
legend("topleft",
legend = c(paste0('Prior Beta(', a1,',' ,b1, ')'), paste0('Posterior Beta(', a2,',' ,b2, ')')),
col = c("blue", "red"),
pch = c(15,15))
OneTrial <- function(cohorts = c(5,5,5,5),
responserate_i = 0.4,
responserate_ii = 0.6,
rr_decision = 0.4,
pcutoff = 0.95){
#Prior selection
alpha_prior <- 1
beta_prior <- 1
#Number of simulations, note that the total number of simulation runs is 2*nsim
nsim <- 1000
#Variables to keep track of TP's, FP's etc...
tp <- 0
fp <- 0
fn <- 0
tn <- 0
biassum <- 0
#We also want to know on average how much patients we use
psum <- 0
#Type I error rate
for(i in 1:nsim){
#Sample from population
responserate <- responserate_i
patients <- rbinom(sum(cohorts), 1, responserate)
#Initialization of true and concluded hypotheses
true_hyp <- 0
concluded_hyp <- 0
#Store parameters of the posterior distribution for bias computation
alpha_posterior_bc <- 0
beta_posterior_bc <- 0
#Run trial
for (j in 1:length(cohorts)) {
#Find number of patients and successes after j nrounds
num_patients <- sum(cohorts[1:j])
successes <- sum(patients[1:num_patients])
#Compute beliefs
alpha_posterior <- successes + alpha_prior
beta_posterior <- num_patients - successes  + beta_prior
c_theta = 1-pbeta(rr_decision, alpha_posterior, beta_posterior)
#Update outerloop variables for bias computation
alpha_posterior_bc <- alpha_posterior
beta_posterior_bc <- beta_posterior
if (c_theta > pcutoff){
concluded_hyp <- 1
break
}
}
#Update outerloop variables
if(concluded_hyp == 0) {
# h0 is true, we conclude h0
tn <- tn + 1
}else{
#h0 is true, we conclude h1
fp <- fp + 1
}
#Update biassum
mean_post <- alpha_posterior_bc / (alpha_posterior_bc +     beta_posterior_bc)
biassum <- biassum + (responserate_i - mean_post)
#Update psum
psum <- psum + num_patients
}
#Type II error rate / Power
for(i in 1:nsim){
#Sample from population
#Response rate ligt nu tussen de rr_decision value en 1 in
responserate <- responserate_ii
patients <- rbinom(sum(cohorts), 1, responserate)
#Initialization of true and concluded hypotheses
true_hyp <- 1
concluded_hyp <- 0
alpha_posterior_bc <- 0
beta_posterior_bc <- 0
#Run trial
for (j in 1:length(cohorts)) {
#Find number of patients and successes after j nrounds
num_patients <- sum(cohorts[1:j])
successes <- sum(patients[1:num_patients])
#Compute beliefs
alpha_posterior <- successes + alpha_prior
beta_posterior <- num_patients - successes  + beta_prior
c_theta = 1-pbeta(rr_decision, alpha_posterior, beta_posterior)
alpha_posterior_bc <- alpha_posterior
beta_posterior_bc <- beta_posterior
if (c_theta > pcutoff){
concluded_hyp <- 1
break
}
}
#Update outerloop variables
if(concluded_hyp == 0){
# h0 is false, we conclude h0
fn <- fn + 1
}else{
# h0 is false, we conclude h1
tp <- tp + 1
}
#Update biassum
mean_post <- alpha_posterior_bc / (alpha_posterior_bc +     beta_posterior_bc)
biassum + (responserate_ii - mean_post)
#Update psum
psum <- psum + num_patients
}
#Return the summary of the simulated trial
values <- c(cohorts[1], sum(cohorts), rr_decision, pcutoff, fp/(fp+tn), fn/(fn+tp), 1-fn/(fn+tp), biassum / (2*nsim), psum / (2*nsim), responserate_i, responserate_ii)
output <- matrix(values,
nrow = 1,
ncol = 11)
colnames(output) <- c('nmin', 'nmax', 'rr_decision', 'pcutoff', 'Type I Error rate', 'Type II Error rate', 'Power', 'Bias', 'avg(n)', 'Response rate I', 'Response rate II')
return(output)
}
OneTrial(cohorts = c(5,5,5),
responserate_i = 0.4,
responserate_ii = 0.6,
rr_decision = 0.4,
pcutoff = 0.95)
set.seed(0)
#Designs D7-D12
#Same size in cohorts, all else unchanged (ptrue = 0.50)
OneTrial(cohorts = c(156), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(39,39,39,39), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = c(31,31,31,31,31), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
OneTrial(cohorts = rep(1, 156), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4)
print('--- break ---', quote = F)
#Designs: D1-D6
#Same size in cohorts, but we start from a fixed sample calc with small effect size (ptrue = 0.45)
OneTrial(cohorts = c(605), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(303,303), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(202,202,202), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = c(122,122,122,122,122), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
OneTrial(cohorts = rep(1, 603), responserate_i = 0.4, responserate_ii = 0.45, rr_decision = 0.4)
print('--- break ---', quote = F)
#Designs: D13-D15
#Same size in cohorts, but we start from a fixed sample calc with big effect size (ptrue = 0.55)
OneTrial(cohorts = c(69), responserate_i = 0.4, responserate_ii = 0.55, rr_decision = 0.4)
OneTrial(cohorts = c(35,35), responserate_i = 0.4, responserate_ii = 0.55, rr_decision = 0.4)
OneTrial(cohorts = c(23,23,23), responserate_i = 0.4, responserate_ii = 0.55, rr_decision = 0.4)
set.seed(0)
#D16
#More stringent cutoff value
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.9642)
#D17
#Increase n in combination with cutoff value
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.985)
#D18
#Only increasing n does not bring us much
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.95)
#D19
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.475, rr_decision = 0.4, pcutoff = 0.98)
set.seed(0)
#D16
#More stringent cutoff value
OneTrial(cohorts = c(78,78), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.9642)
#D17
#Increase n in combination with cutoff value
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.985)
#D18
#Only increasing n does not bring us much
OneTrial(cohorts = c(52,52,52,52), responserate_i = 0.4, responserate_ii = 0.5, rr_decision = 0.4, pcutoff = 0.95)
#D19
OneTrial(cohorts = c(152,152,152,152), responserate_i = 0.4, responserate_ii = 0.475, rr_decision = 0.4, pcutoff = 0.985)
